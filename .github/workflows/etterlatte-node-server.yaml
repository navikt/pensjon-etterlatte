name: etterlatte-node-server

env:
  APP_NAME: ${{ github.workflow }}
  IMAGE_TAG: ghcr.io/${{ github.repository }}/${{ github.workflow }}:${{ github.sha }}
  IMAGE_TAG_LATEST: ghcr.io/${{ github.repository }}/${{ github.workflow }}:latest

on:
  workflow_dispatch: # Allow manually triggered workflow run
  push:
    branches:
      - main
    paths:
      - apps/etterlatte-node-server/**
      - '!apps/etterlatte-node-server/src/mock/**'
      - '!apps/etterlatte-node-server/README.md'
  pull_request:
    branches:
      - main
    paths:
      - apps/etterlatte-node-server/**
      - '!apps/etterlatte-node-server/src/mock/**'
      - '!apps/etterlatte-node-server/README.md'

jobs:
  build-and-publish:
    name: Build, test and publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      # Check cache for node_modules
      - name: Cache node modules (client)
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            apps/${{ env.APP_NAME }}/node_modules
            ~/.cache/Cypress
          key: ${{ env.APP_NAME }}-${{ hashFiles('apps/etterlatte-node-server/yarn.lock') }}

      # Install and build client
      - name: Yarn install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        working-directory: apps/${{ env.APP_NAME }}
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
        run: yarn install
      - name: Yarn build
        working-directory: apps/${{ env.APP_NAME }}
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
        run: yarn build

      - name: Build and publish docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: etterlatte
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          dockerfile: docker/frontend.Dockerfile
          docker_context: apps/${{ github.workflow }}/
          image_suffix: ${{ github.workflow }}
          tag: ${{ github.ref_name == 'main' && env.IMAGE_TAG_LATEST || ''}}
      - name: Print docker tag
        run: echo 'Docker-tag er ${{ steps.docker-build-push.outputs.image }} ' >> $GITHUB_STEP_SUMMARY
