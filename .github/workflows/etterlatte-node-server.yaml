name: etterlatte-node-server

env:
  IMAGE: ghcr.io/${{ github.repository }}/${{ github.workflow }}:${{ github.sha }}
  APP_NAME: ${{ github.workflow }}

on:
  workflow_dispatch: # Allow manually triggered workflow run
    inputs:
      deploy-prod:
        description: "Deploy til produksjon"
        required: false
        default: 'false'
        type: choice
        options:
          - true
          - false
  push:
    branches:
      - main
      - release/*
      - feature/*
      - fix/*
    paths:
      - apps/etterlatte-node-server/**
      - '!apps/etterlatte-node-server/src/mock/**'
      - '!apps/etterlatte-node-server/README.md'

jobs:
  build-and-publish:
    name: Build, test and publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node 14
        uses: actions/setup-node@v3
        with:
          node-version: "14.x"

      # Check cache for node_modules
      - name: Cache node modules (client)
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            apps/${{ env.APP_NAME }}/node_modules
            ~/.cache/Cypress
          key: ${{ env.APP_NAME }}-${{ hashFiles('apps/etterlatte-node-server/yarn.lock') }}

      # Install and build client
      - name: Yarn install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        working-directory: apps/${{ env.APP_NAME }}
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
        run: yarn install
      - name: Yarn build
        working-directory: apps/${{ env.APP_NAME }}
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
        run: yarn build

      # Docker login, build and push
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${GITHUB_REPOSITORY}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: apps/${{ env.APP_NAME }}
          push: true
          tags: ${{ env.IMAGE }}
