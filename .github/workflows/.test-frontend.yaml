name: .test-frontend.yaml

on:
  workflow_call:

permissions:
  contents: read
  id-token: write

jobs:
  test-and-verify:
    name: Test and verify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache npm modules webapp
        uses: actions/cache@v4
        id: yarn-cache-webapp # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            apps/${{ github.workflow }}/node_modules
            ~/.cache/Cypress
          key: ${{ hashFiles(format('apps/{0}/yarn.lock',github.workflow)) }}

      # Install and build
      - name: Install & build bff
        working-directory: apps/etterlatte-node-server
        run: yarn install --frozen-lockfile && yarn build --outDir dist
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Install node modules webapp
        if: steps.yarn-cache-webapp.outputs.cache-hit != 'true'
        working-directory: apps/${{ github.workflow }}
        run: yarn install --frozen-lockfile
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: build webapp
        working-directory: apps/${{ github.workflow }}
        run: yarn build
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}

      # Run tests
      - name: Run unit tests client
        working-directory: apps/${{ github.workflow }}
        run: CI=true yarn test
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Run unit tests BFF
        working-directory: apps/etterlatte-node-server
        run: CI=true yarn test
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Run e2e tests (Cypress) client
        uses: cypress-io/github-action@v6
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
        with:
          install: false
          start: yarn start
          wait-on: 'http://localhost:5173'
          working-directory: apps/${{ github.workflow }}