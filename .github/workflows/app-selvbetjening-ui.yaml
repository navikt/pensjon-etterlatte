name: selvbetjening-ui

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/${{ github.workflow }}:${{ github.sha }}
  APP_NAME: ${{ github.workflow }}

on:
  workflow_dispatch: # Allow manually triggered workflow run
    inputs:
      deploy-prod:
        description: "Deploy til produksjon"
        required: false
        default: "false"
  push:
    branches:
      - main
      - release/*
      - feature/*
      - fix/*
    paths:
      - apps/selvbetjening-ui/**
      - ./github/workflows/app-selvbetjening-ui.yaml

jobs:
  build-and-publish:
    name: Build and publish docker image
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.keys.outputs.yarn-lock-hash }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      # Hash yarn.lock file to see if it has changed
      - name: Create hash from yarn.lock
        id: keys
        run: echo ::set-output name=yarn-lock-hash::${{ env.APP_NAME }}-${{ hashFiles('apps/selvbetjening-ui/yarn.lock') }}

      # Client cache
      - name: Cache node modules (client)
        id: yarn-cache-client
        uses: actions/cache@v3
        with:
          path: |
            apps/${{ env.APP_NAME }}/node_modules
            ~/.cache/Cypress
          key: ${{ steps.keys.outputs.yarn-lock-hash }}

      # Install and build client
      - name: Install client node modules
        if: steps.yarn-cache-client.outputs.cache-hit != 'true'
        working-directory: apps/${{ env.APP_NAME }}
        run: yarn install
      - name: Build client
        working-directory: apps/${{ env.APP_NAME }}
        run: yarn build

      # Docker login, build and push
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${GITHUB_REPOSITORY}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: apps/${{ env.APP_NAME }}
          push: true
          tags: ${{ env.IMAGE }}

  test-and-verify:
    name: Test and verify
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      # Client cache
      - name: Cache node modules (client)
        id: yarn-cache-client
        uses: actions/cache@v3
        with:
          path: |
            apps/${{ env.APP_NAME }}/node_modules
            ~/.cache/Cypress
          key: ${{ needs.build-and-publish.outputs.output1 }}

      # Install and build
      - name: Install
        if: steps.yarn-cache-client.outputs.cache-hit != 'true'
        working-directory: apps/${{ env.APP_NAME }}
        run: yarn install
      - name: Build
        working-directory: apps/${{ env.APP_NAME }}
        run: yarn build

      # Run tests
      - name: Run unit tests
        working-directory: apps/${{ env.APP_NAME }}
        run: CI=true yarn test
      - name: Start application
        working-directory: apps/${{ env.APP_NAME }}
        run: yarn start:mock & npx wait-on http://localhost:3000
      - name: Run e2e tests (Cypress)
        working-directory: apps/${{ env.APP_NAME }}
        run: yarn cy:test

  deploy-to-dev-gcp:
    name: Deploy to dev-gcp
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: apps/${{ env.APP_NAME }}/.nais/dev.yaml

  deploy-to-labs-gcp:
    name: Deploy to labs-gcp
    needs: build-and-publish
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: apps/${{ env.APP_NAME }}/.nais/labs.yaml

  deploy-to-prod-gcp:
    name: Deploy to prod-gcp
    if: ${{ github.ref == 'refs/heads/main' || github.event.inputs.deploy-prod == 'true' }}
    needs: [test-and-verify, deploy-to-dev-gcp]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: apps/${{ env.APP_NAME }}/.nais/prod.yaml
