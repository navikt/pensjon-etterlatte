name: .build-frontend.yaml

on:
  workflow_call:
    inputs:
      dockerfile:
        description: 'Sti til dockerfile'
        required: true
        type: string
    outputs:
      image:
        description: "Docker image url"
        value: ${{ jobs.build-and-publish.outputs.image }}
      yarn-lock-hash:
        description: "Docker image url"
        value: ${{ jobs.build-and-publish.outputs.yarn-lock-hash }}

permissions:
  contents: read
  id-token: write

jobs:
  test:
    if: github.event_name == 'pull_request'
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install
        working-directory: apps/${{ github.workflow }}
        run: yarn install --frozen-lockfile && yarn build
      - name: Run tests
        working-directory: apps/${{ github.workflow }}
        run: CI=true yarn test

  build-and-publish:
    if: github.event_name != 'pull_request'
    name: Build & publish
    runs-on: ubuntu-latest
    outputs:
      yarn-lock-hash: ${{ steps.keys.outputs.yarn-lock-hash }}
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      # Hash yarn.lock file to see if it has changed
      - name: Create hash from yarn.lock
        id: keys
        run: |
          WORKFLOW=$(echo ${{ github.workflow }})
          echo ::set-output name=yarn-lock-hash::$WORKFLOW-${{ hashFiles('apps/$WORKFLOW/yarn.lock') }}

      # Client cache
      - name: Cache node modules (client)
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            apps/${{ github.workflow }}/node_modules
            ~/.cache/Cypress
          key: ${{ steps.keys.outputs.yarn-lock-hash }}

      # Install and build client
      - name: Install node modules
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        working-directory: apps/${{ github.workflow }}
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
        run: yarn install --frozen-lockfile
      - name: Build
        working-directory: apps/${{ github.workflow }}
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
        run: yarn build

      - name: Build and publish docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: etterlatte
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          dockerfile: ${{ inputs.dockerfile }}
          docker_context: apps/${{ github.workflow }}/
          image_suffix: ${{ github.workflow }}
          tag: ${{ env.GITHUB_REF_SLUG }}
      - name: Print docker tag
        run: echo 'Docker-tag er ${{ steps.docker-build-push.outputs.image }} ' >> $GITHUB_STEP_SUMMARY