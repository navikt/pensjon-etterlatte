name: .build-frontend.yaml

on:
  workflow_call:
    outputs:
      image:
        description: "Docker image url"
        value: ${{ jobs.build-and-publish.outputs.image }}
      yarnlockhash:
        description: "Docker image url"
        value: ${{ jobs.build-and-publish.outputs.yarnlockhash }}

permissions:
  contents: read
  id-token: write

jobs:
  test-and-verify:
    if: github.event_name == 'pull_request'
    name: Test and verify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # Install and build
      - name: Install & build bff
        working-directory: apps/etterlatte-node-server
        run: yarn install --frozen-lockfile && yarn build
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Install & build webapp
        working-directory: apps/${{ github.workflow }}
        run: yarn install --frozen-lockfile && yarn build
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}

      # Run tests
      - name: Run unit tests client
        working-directory: apps/${{ github.workflow }}
        run: CI=true yarn test
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Run unit tests BFF
        working-directory: apps/etterlatte-node-server
        run: CI=true yarn test
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Run e2e tests (Cypress) client
        uses: cypress-io/github-action@v6
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
        with:
          start: yarn start
          wait-on: 'http://localhost:3000'
          working-directory: apps/${{ github.workflow }}

  build-and-publish:
    if: github.event_name != 'pull_request'
    name: Build & publish
    runs-on: ubuntu-latest
    outputs:
      yarnlockhash: ${{ steps.keys.outputs.yarnlockhash }}
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      # Install and build
      - name: Install & build bff
        working-directory: apps/etterlatte-node-server
        run: yarn install --frozen-lockfile && yarn build --outDir dist
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Install & build webapp
        working-directory: apps/${{ github.workflow }}
        run: yarn install --frozen-lockfile && yarn build
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}

      # Run tests
      - name: Run unit tests client
        working-directory: apps/${{ github.workflow }}
        run: CI=true yarn test
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Run unit tests BFF
        working-directory: apps/etterlatte-node-server
        run: CI=true yarn test
        env:
          NPM_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Move webapp build to BFF location
        working-directory: apps/
        run: mv ${{ github.workflow }}/build etterlatte-node-server
        shell: bash

      - name: Build and publish docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: etterlatte
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          build_args: |
           app_name=${{ github.workflow }}
          dockerfile: apps/etterlatte-node-server/Dockerfile
          docker_context: apps/etterlatte-node-server
          image_suffix: ${{ github.workflow }}
          tag: ${{ env.GITHUB_REF_SLUG }}
      - name: Print docker tag
        run: echo 'Docker-tag er ${{ steps.docker-build-push.outputs.image }} ' >> $GITHUB_STEP_SUMMARY